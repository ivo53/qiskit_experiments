import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit
x = np.linspace(0.001, 0.25, 300)
y = np.array(
    [0.01806641, 0.01855469, 0.05712891, 0.0859375 , 0.1484375 , 0.18847656
, 0.26806641, 0.34814453, 0.40869141, 0.49951172, 0.60058594, 0.65966797
, 0.72753906, 0.80224609, 0.84423828, 0.88232422, 0.92724609, 0.94921875
, 0.95361328, 0.9375    , 0.91308594, 0.89160156, 0.82861328, 0.76318359
, 0.72900391, 0.62695312, 0.55761719, 0.47851562, 0.39355469, 0.31787109
, 0.25390625, 0.17675781, 0.11230469, 0.06445312, 0.02832031, 0.01025391
, 0.00585938, 0.01025391, 0.03662109, 0.0703125 , 0.10791016, 0.16455078
, 0.22558594, 0.31738281, 0.37597656, 0.48779297, 0.54785156, 0.62011719
, 0.70214844, 0.77392578, 0.82226562, 0.89208984, 0.92822266, 0.94824219
, 0.95654297, 0.95019531, 0.93652344, 0.91503906, 0.87255859, 0.81201172
, 0.74804688, 0.67773438, 0.62158203, 0.53857422, 0.43701172, 0.35791016
, 0.29541016, 0.19970703, 0.15283203, 0.10742188, 0.05761719, 0.02832031
, 0.00683594, 0.00439453, 0.01708984, 0.0390625 , 0.07421875, 0.11816406
, 0.18310547, 0.23291016, 0.31103516, 0.38671875, 0.48925781, 0.53955078
, 0.62011719, 0.70117188, 0.76611328, 0.82275391, 0.87207031, 0.91455078
, 0.95361328, 0.94970703, 0.96240234, 0.95703125, 0.92089844, 0.8828125
, 0.83203125, 0.78564453, 0.703125  , 0.62744141, 0.55371094, 0.48583984
, 0.39160156, 0.32470703, 0.26904297, 0.19042969, 0.14355469, 0.08837891
, 0.04296875, 0.02050781, 0.00683594, 0.00390625, 0.01953125, 0.04736328
, 0.0859375 , 0.12548828, 0.18212891, 0.25292969, 0.33349609, 0.38232422
, 0.47607422, 0.55664062, 0.63867188, 0.70410156, 0.77050781, 0.82373047
, 0.86767578, 0.90136719, 0.93457031, 0.94238281, 0.95214844, 0.94824219
, 0.92236328, 0.88671875, 0.85058594, 0.80517578, 0.73535156, 0.66357422
, 0.59423828, 0.51953125, 0.43261719, 0.35839844, 0.30810547, 0.23925781
, 0.15966797, 0.11816406, 0.06640625, 0.04443359, 0.01513672, 0.00830078
, 0.01123047, 0.01953125, 0.04296875, 0.06640625, 0.10888672, 0.16064453
, 0.21728516, 0.29101562, 0.34423828, 0.41650391, 0.50976562, 0.56933594
, 0.65039062, 0.69873047, 0.77246094, 0.81738281, 0.87207031, 0.90234375
, 0.93212891, 0.95605469, 0.94482422, 0.93847656, 0.92431641, 0.91259766
, 0.84765625, 0.81542969, 0.73828125, 0.70410156, 0.65136719, 0.56982422
, 0.49853516, 0.41210938, 0.35595703, 0.29150391, 0.21044922, 0.16699219
, 0.12402344, 0.07128906, 0.04345703, 0.01806641, 0.00585938, 0.00585938
, 0.01416016, 0.04492188, 0.05908203, 0.11865234, 0.16113281, 0.20800781
, 0.26220703, 0.3359375 , 0.39160156, 0.49267578, 0.55517578, 0.64111328
, 0.68164062, 0.75732422, 0.81591797, 0.85449219, 0.8984375 , 0.91796875
, 0.93798828, 0.96191406, 0.95507812, 0.94287109, 0.91503906, 0.87646484
, 0.83837891, 0.80908203, 0.75585938, 0.66699219, 0.62451172, 0.56054688
, 0.48876953, 0.41796875, 0.33496094, 0.28320312, 0.22412109, 0.18310547
, 0.10253906, 0.07080078, 0.03710938, 0.02099609, 0.00634766, 0.00878906
, 0.01806641, 0.03564453, 0.05371094, 0.0859375 , 0.13476562, 0.18261719
, 0.24267578, 0.30175781, 0.36230469, 0.43505859, 0.50878906, 0.57470703
, 0.65087891, 0.70996094, 0.77685547, 0.82910156, 0.86035156, 0.90332031
, 0.92285156, 0.94189453, 0.95166016, 0.95410156, 0.94238281, 0.91650391
, 0.88183594, 0.8515625 , 0.79589844, 0.74560547, 0.68017578, 0.63574219
, 0.55517578, 0.49023438, 0.41748047, 0.37109375, 0.29248047, 0.23583984
, 0.18457031, 0.12207031, 0.09326172, 0.05664062, 0.03173828, 0.01123047
, 0.00488281, 0.00683594, 0.01904297, 0.04345703, 0.06933594, 0.11425781
, 0.15673828, 0.20507812, 0.27734375, 0.31201172, 0.40478516, 0.43505859
, 0.51953125, 0.58837891, 0.66748047, 0.72705078, 0.76367188, 0.82177734
, 0.86572266, 0.90185547, 0.91992188, 0.93847656, 0.94775391, 0.94189453]
)
def fit_function(x_values, y_values, function, init_params):
    fitparams, conv = curve_fit(
        function, 
        x_values, 
        y_values, 
        init_params,
        maxfev=100000, 
        bounds=(
            [-0.53, 1, 1, 0, 0.45], 
            [-.47, 1000, 100, 1000, 0.55]
        )
    )
    y_fit = function(x_values, *fitparams)
    
    return fitparams, y_fit


fitparams, _ = fit_function(
    x, y, 
    lambda x, A, k, l, p, B: A * (np.cos(k*x + l * (1 - np.exp(-p*x)))) + B,
    [-.5, 160, 16, 2, 0.5]
)
print(fitparams)
A,k,l,p,B = fitparams
# A, k, l, B = fit_function2(
#     x, y, 
#     lambda x, A, k, l, B: A * (np.cos(k * (x) + l * np.sqrt(x))) + B,
#     [-.45, 40, 7, 0.5],
#     [.001, .1, .01, .001]
# )
# A, k, l, B = [-.45, 40, 7, 0.5]
x_ext = np.linspace(x[0], x[-1], 10000)
extended_y_fit = A * (np.cos(k*x_ext + l * (1-np.exp(-p*x_ext)))) + B
plt.plot(x, y, "bx")
plt.plot(x_ext, extended_y_fit, color='red')
plt.show()
